server:
  port: 8080

spring:
  application:
    name: Service Gateway
  main:
    web-application-type: reactive
  cloud:
    gateway:
      default-filters:
        - GlobalFilter
#        - DedupeResponseHeader=Access-Control-Allow-Origin Access-Control-Allow-Credentials, RETAIN_UNIQUE
#        - PreserveHostHeader
      routes:
#        - id: webpage-service
#          uri: http://localhost:3000
#          predicates:
#            - Path=/auth/**
#          filters:
#            - RewritePath=/service/(?<segment>.*), /$\{segment}
#            - AddRequestHeader=X-Request-Source, Gateway
#        
#        - id: static-resources
#          uri: http://localhost:3000  # 프론트엔드 서버 주소
#          predicates:
#            - Path=/node_modules/**, /src/**, /@*/**
        
        - id: auth-service
          uri: http://host.docker.internal:8090
#          uri: http://localhost:8090
          predicates:
            - Path=/api/**
          filters:
            - PreserveHostHeader # 호스트 헤더 유지
#            - RewritePath=/service/(?<segment>.*), /$\{segment}
##            - RewritePath=/api/(?<remaining>.*), /$\{remaining}
#            - AddRequestHeader=X-Request-Source, Gateway
#            - ModifyResponseBody=${response.body}, ${response.body}
#            - SalesServiceFilter

#        - id: order-service
#          uri: http://localhost:8091
#          predicates:
#            - Path=/api/test/**
#          filters:
#            - SalesServiceFilter
      globalcors:
        corsConfigurations:
          '[/**]': # 모든 경로에 대해 적용
            allowedOrigins: "http://localhost:3000" # 허용할 Origin
            allowedMethods: "GET,POST,PUT,DELETE,OPTIONS"  # 허용할 HTTP Method
            allowedHeaders: "*"                   # 허용할 Header
            allowCredentials: true                # 자격 증명 허용 여부

logging:
    level:
        root: INFO
        org.springframework.cloud.gateway: DEBUG